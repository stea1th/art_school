drop table if exists nachricht_updater;
drop table if exists user_roles;
drop table if exists block;
drop table if exists nachricht;
drop table if exists thema;
drop table if exists unterricht;
drop table if exists zahlung;
drop table if exists users;
-- drop table if exists kind;


drop sequence global_seq if exists;

create sequence global_seq as integer start with 1000;

create table zahlung
(
  id    INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name  varchar(255)                          not null,
  preis numeric                          not null,
  dauer time                             not null,
  aktiv boolean               default true not null,
  constraint zahlung_unique_preis_dauer_idx unique (preis, dauer)
);

create table users
(
  id             INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name           VARCHAR(40)                       NOT NULL,
  adresse        varchar(50)                       not null,
  email          VARCHAR(40)                       NOT NULL,
  admin_passwort VARCHAR(50)                       NOT NULL,
  passwort       VARCHAR(100)                       NOT NULL,
  registriert    TIMESTAMP           DEFAULT now() NOT NULL,
  aktiv          BOOLean               DEFAULT TRUE  NOT NULL
);
create unique index user_unique_email_index on users (email);

create table unterricht
(
  id      INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  datum   timestamp           default now() not null,
  bezahlt boolean                default false not null,
  notiz   varchar(255),
  u_id    integer                           not null,
  z_id    integer                           not null,
  foreign key (u_id) references users (id) on delete cascade,
  foreign key (z_id) references zahlung (id) on delete cascade
);


create table thema
(
  id      INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  titel   varchar(40)                       not null,
  views   integer             default 0     not null,
  aktiv   boolean               default true  not null,
  gepinnt boolean              default false not null,
  u_id    integer,
  foreign key (u_id) references users (id) on delete cascade
);

create table nachricht
(
  id    INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  text  varchar(255)                          not null,
  datum timestamp           default now() not null,
  u_id  integer                           not null,
  t_id  integer                           not null,
  n_id  integer,
  foreign key (u_id) references users (id) on delete cascade,
  foreign key (t_id) references thema (id) on delete cascade,
  foreign key (n_id) references nachricht (id) on delete cascade
);

create table block
(
  id       INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  reason   varchar(255)                                          not null,
  datum    timestamp           default now()  not null,
  accepted boolean               default false                     not null,
  u_id     integer                                               not null,
  adm_id   integer                                               not null,
  foreign key (u_id) references users (id) on delete cascade,
  foreign key (adm_id) references users (id) on delete cascade

);

create table user_roles
(
  user_id INTEGER     NOT NULL,
  role    VARCHAR(30) NOT NULL,
  CONSTRAINT user_roles_idx UNIQUE (user_id, role),
  FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

create table nachricht_updater
(
  user_id      integer                 not null,
  nachricht_id integer                 not null,
  datum        timestamp default now() not null,
  action       varchar(40)             not null,
  primary key (user_id, nachricht_id)
);
-- create unique index user_nachricht_unique_index on nachricht_updater(u_id, n_id);




